name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Install gox
        run: go install github.com/mitchellh/gox@latest

      - name: Cross-compile with gox
        run: |
          mkdir -p dist/
          gox -osarch="linux/amd64 linux/arm64 windows/amd64 windows/arm64" \
            -output "dist/bctool_{{.OS}}_{{.Arch}}" .
          
          # Generate checksums
          cd dist
          for f in *; do
            shasum -a 256 "$f" > "$f.sha256"
          done
      - name: List dist contents before upload
        run: |
          echo "ðŸ“¦ Binaries prepared for release:"
          ls -lh dist/

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/bctool_linux_amd64
            dist/bctool_linux_amd64.sha256
            dist/bctool_linux_arm64
            dist/bctool_linux_arm64.sha256
            dist/bctool_windows_amd64.exe
            dist/bctool_windows_amd64.exe.sha256
            dist/bctool_windows_arm64.exe
            dist/bctool_windows_arm64.exe.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.TAGGING_PAT }}


  update-brew:
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Homebrew tap
        uses: actions/checkout@v4
        with:
          repository: mselser95/homebrew-bctool
          token: ${{ secrets.TAGGING_PAT }}
          path: tap

      - name: Download all .sha256 checksums from release
        run: |
          platforms=("linux_amd64" "linux_arm64" "windows_amd64" "windows_arm64")
          for platform in "${platforms[@]}"; do
            curl -sL -o "bctool_${platform}.sha256" \
              "https://github.com/mselser95/bctool/releases/download/${{ github.ref_name }}/bctool_${platform}.sha256"
          done

      - name: Parse SHA256 values
        id: sha
        run: |
          echo "linux_amd64=$(cut -d ' ' -f 1 bctool_linux_amd64.sha256)" >> $GITHUB_OUTPUT
          echo "linux_arm64=$(cut -d ' ' -f 1 bctool_linux_arm64.sha256)" >> $GITHUB_OUTPUT
          echo "windows_amd64=$(cut -d ' ' -f 1 bctool_windows_amd64.sha256)" >> $GITHUB_OUTPUT
          echo "windows_arm64=$(cut -d ' ' -f 1 bctool_windows_arm64.sha256)" >> $GITHUB_OUTPUT

      - name: Update Homebrew Formula
        run: |
          VERSION=${{ github.ref_name }}
          FORMULA=tap/Formula/bctool.rb

          echo "class Bctool < Formula" | tee $FORMULA
          echo "  desc \"Blockchain info tool\"" >> $FORMULA
          echo "  homepage \"https://github.com/mselser95/bctool\"" >> $FORMULA
          echo "  version \"${VERSION#v}\"" >> $FORMULA
          echo "" >> $FORMULA
          echo "  on_linux do" >> $FORMULA
          echo "    if Hardware::CPU.intel?" >> $FORMULA
          echo "      url \"https://github.com/mselser95/bctool/releases/download/${VERSION}/bctool_linux_amd64\"" >> $FORMULA
          echo "      sha256 \"${{ steps.sha.outputs.linux_amd64 }}\"" >> $FORMULA
          echo "    end" >> $FORMULA
          echo "" >> $FORMULA
          echo "    if Hardware::CPU.arm?" >> $FORMULA
          echo "      url \"https://github.com/mselser95/bctool/releases/download/${VERSION}/bctool_linux_arm64\"" >> $FORMULA
          echo "      sha256 \"${{ steps.sha.outputs.linux_arm64 }}\"" >> $FORMULA
          echo "    end" >> $FORMULA
          echo "  end" >> $FORMULA
          echo "" >> $FORMULA
          echo "  def install" >> $FORMULA
          echo "    bin.install \"\#{stable.url.split('/')[-1]}\" => \"bctool\"" >> $FORMULA
          echo "  end" >> $FORMULA
          echo "" >> $FORMULA
          echo "  test do" >> $FORMULA
          echo "    system \"\#{bin}/bctool\", \"--help\"" >> $FORMULA
          echo "  end" >> $FORMULA
          echo "end" >> $FORMULA

      - name: Commit and push updated formula
        run: |
          cd tap
          git config user.name "bctool bot"
          git config user.email "bctool@bot.com"
          git add Formula/bctool.rb
          git commit -m "Update bctool formula to ${{ github.ref_name }}"
          git push origin main
